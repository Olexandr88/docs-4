[
  {
    "type": "get",
    "url": "/v1/libraries",
    "title": "List libraries",
    "name": "listLibraries",
    "description": "<p>List firmware libraries. This includes private libraries visibile only to the user.</p>",
    "group": "Libraries.1",
    "query": [
      {
        "group": "Query",
        "type": "String",
        "optional": true,
        "field": "filter",
        "isArray": false,
        "description": "<p>Search for libraries with this partial name</p>"
      },
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "\"1\""
        ],
        "optional": true,
        "field": "page",
        "isArray": false,
        "description": "<p>Page number</p>"
      },
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "\"10\""
        ],
        "optional": true,
        "field": "limit",
        "isArray": false,
        "description": "<p>Items per page (max 100)</p>"
      },
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "\"popularity\""
        ],
        "optional": true,
        "field": "sort",
        "isArray": false,
        "description": "<p>Sort order for results. Prefix with <code>-</code> for descending order.</p> <ul> <li><code>name</code></li> <li><code>installs</code></li> <li><code>popularity</code></li> <li><code>published</code></li> <li><code>updated</code></li> <li><code>created</code></li> <li><code>official</code></li> <li><code>verified</code></li> </ul>"
      },
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "\"all\""
        ],
        "optional": true,
        "field": "scope",
        "isArray": false,
        "description": "<p>Which subset of libraries to list.</p> <ul> <li><code>all</code> to retrieve public libraries and any private libraries belonging to the user</li> <li><code>official</code> to retrieve official public libraries</li> <li><code>public</code> to retrieve public libraries</li> <li><code>mine</code> to retrieve only public libraries belonging to the current user</li> <li><code>private</code> to retrieve only private libraries (belonging to the current user).</li> </ul>"
      },
      {
        "group": "Query",
        "type": "String",
        "optional": true,
        "field": "excludeScopes",
        "isArray": false,
        "description": "<p>Which subsets of libraries to avoid listing, separated by comma. Same values as <code>scope</code>.</p>"
      },
      {
        "group": "Query",
        "type": "String",
        "optional": true,
        "field": "architectures",
        "isArray": false,
        "description": "<p>Architectures to list, separated by comma. Missing means all architectures.</p>"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "data",
            "isArray": true,
            "description": "<p>Array of library objects. Described in <a href=\"#get-library-details\">Get library details</a></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/libraries?limit=2",
          "content": "GET /v1/libraries?limit=2\nHTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"type\": \"libraries\",\n      \"id\": \"neopixel\",\n      \"links\": {\n        \"download\": \"https://library-archives.particle.io/libraries/neopixel/neopixel-0.0.10.tar.gz\"\n      },\n      \"attributes\": {\n        \"name\": \"neopixel\",\n        \"version\": \"0.0.10\",\n        \"installs\": 9125,\n        \"license\": \"GNU GPLv3\",\n        \"author\": \"Adafruit, Technobly\",\n        \"sentence\": \"An Implementation of Adafruit's NeoPixel Library for the Spark Core, Particle Photon, P1, Electron and RedBear Duo\",\n        \"url\": \"https://github.com/technobly/sparkcore-neopixel\",\n        \"repository\": \"https://github.com/technobly/sparkcore-neopixel.git\",\n        \"architectures\": [],\n        \"visibility\": \"public\",\n        \"official\": true,\n        \"mine\": false,\n        \"verified\": true\n      }\n    },\n    {\n      \"type\": \"libraries\",\n      \"id\": \"InternetButton\",\n      \"links\": {\n        \"download\": \"https://library-archives.particle.io/libraries/InternetButton/InternetButton-0.1.10.tar.gz\"\n      },\n      \"attributes\": {\n        \"name\": \"InternetButton\",\n        \"version\": \"0.1.10\",\n        \"installs\": 7660,\n        \"license\": \"LGPL\",\n        \"author\": \"Richard Whitney <richard@particle.io>\",\n        \"sentence\": \"Functions to make the Internet Button easy to use! If you have an original SparkButton, make sure to use `begin(1)`\",\n        \"url\": \"https://github.com/spark/internetbutton\",\n        \"repository\": \"https://github.com/spark/internetbutton.git\",\n        \"architectures\": [],\n        \"visibility\": \"public\",\n        \"official\": true,\n        \"mine\": false\n      }\n    }\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/libraries?scope=official&sort=name\" \\",
        "content": "$ curl \"https://api.particle.io/v1/libraries?scope=official&sort=name\" \\\n       -H \"Authorization: Bearer :access_token\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "src/LibrariesController.js",
    "groupTitle": "Libraries.1"
  },
  {
    "type": "get",
    "url": "/v1/libraries/:libraryName",
    "title": "Get library details",
    "name": "getLibrary",
    "description": "<p>Get details for a firmware library.</p>",
    "group": "Libraries.2",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "libraryName",
            "isArray": false,
            "description": "<p>Name of library to retrieve (case insensitive)</p>"
          }
        ]
      }
    },
    "query": [
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "\"latest\""
        ],
        "optional": true,
        "field": "version",
        "isArray": false,
        "description": "<p>Version to retrieve. Defaults to the latest version.</p>"
      },
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "\"all\""
        ],
        "optional": true,
        "field": "scope",
        "isArray": false,
        "description": "<p>Which subset of versions to get.</p> <ul> <li><code>all</code></li> <li><code>public</code></li> <li><code>private</code></li> </ul>"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "data",
            "isArray": false,
            "description": "<p>The library version in <a href=\"http://jsonapi.org/\">JSON API format</a></p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "parentNode": {
              "path": "data",
              "field": "data",
              "type": "Object[]",
              "isArray": true
            },
            "field": "data.id",
            "isArray": false,
            "description": "<p>The name of the library</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "parentNode": {
              "path": "data",
              "field": "data",
              "type": "Object[]",
              "isArray": true
            },
            "field": "data.links.download",
            "isArray": false,
            "description": "<p>The URL to download the files for this library</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "parentNode": {
              "path": "data",
              "field": "data",
              "type": "Object[]",
              "isArray": true
            },
            "field": "data.attributes",
            "isArray": false,
            "description": "<p>Additional meta data for the library. Not all fields are available for every library.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/libraries/internetbutton",
          "content": "GET /v1/libraries/internetbutton\nHTTP/1.1 200 OK\n{\n  \"data\": {\n    \"type\": \"libraries\",\n    \"id\": \"InternetButton\",\n    \"links\": {\n      \"download\": \"https://library-archives.particle.io/libraries/InternetButton/InternetButton-0.1.10.tar.gz\"\n    },\n    \"attributes\": {\n      \"name\": \"InternetButton\",\n      \"version\": \"0.1.10\",\n      \"installs\": 7660,\n      \"license\": \"LGPL\",\n      \"author\": \"Richard Whitney <richard@particle.io>\",\n      \"sentence\": \"Functions to make the Internet Button easy to use! If you have an original SparkButton, make sure to use `begin(1)`\",\n      \"url\": \"https://github.com/spark/internetbutton\",\n      \"repository\": \"https://github.com/spark/internetbutton.git\",\n      \"architectures\": [],\n      \"visibility\": \"public\",\n      \"official\": true,\n      \"mine\": false\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/libraries/internetbutton \\",
        "content": "$ curl https://api.particle.io/v1/libraries/internetbutton \\\n       -H \"Authorization: Bearer :access_token\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "src/LibrariesController.js",
    "groupTitle": "Libraries.2"
  },
  {
    "type": "get",
    "url": "/v1/libraries/:libraryName/versions",
    "title": "Get library versions",
    "name": "getLibraryVersions",
    "description": "<p>Get details for all versions of a firmware library.</p>",
    "group": "Libraries.3",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "libraryName",
            "isArray": false,
            "description": "<p>Name of library to retrieve (case insensitive)</p>"
          }
        ]
      }
    },
    "query": [
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "\"all\""
        ],
        "optional": true,
        "field": "scope",
        "isArray": false,
        "description": "<p>Which subset of versions to get.</p> <ul> <li><code>all</code></li> <li><code>public</code></li> <li><code>private</code></li> </ul>"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "data",
            "isArray": true,
            "description": "<p>Array of library version objects. Described in <a href=\"#get-library-details\">Get library details</a></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/libraries/internetbutton/versions",
          "content": "GET /v1/libraries/internetbutton/versions\nHTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"type\": \"libraries\",\n      \"id\": \"InternetButton\",\n      \"links\": {\n        \"download\": \"https://library-archives.particle.io/libraries/InternetButton/InternetButton-0.1.9.tar.gz\"\n      },\n      \"attributes\": {\n        \"name\": \"InternetButton\",\n        \"version\": \"0.1.9\",\n        \"installs\": 7660,\n        \"license\": \"LGPL\",\n        \"author\": \"Richard Whitney <richard@particle.io>\",\n        \"sentence\": \"Functions to make the Internet Button easy to use! If you have an original SparkButton, make sure to use `begin(1)`\",\n        \"url\": \"https://github.com/spark/internetbutton\",\n        \"repository\": \"https://github.com/spark/internetbutton.git\",\n        \"architectures\": [],\n        \"visibility\": \"public\",\n        \"official\": true,\n        \"mine\": false\n      }\n    },\n    {\n      \"type\": \"libraries\",\n      \"id\": \"InternetButton\",\n      \"links\": {\n        \"download\": \"https://library-archives.particle.io/libraries/InternetButton/InternetButton-0.1.10.tar.gz\"\n      },\n      \"attributes\": {\n        \"name\": \"InternetButton\",\n        \"version\": \"0.1.10\",\n        \"installs\": 7660,\n        \"license\": \"LGPL\",\n        \"author\": \"Richard Whitney <richard@particle.io>\",\n        \"sentence\": \"Functions to make the Internet Button easy to use! If you have an original SparkButton, make sure to use `begin(1)`\",\n        \"url\": \"https://github.com/spark/internetbutton\",\n        \"repository\": \"https://github.com/spark/internetbutton.git\",\n        \"architectures\": [],\n        \"visibility\": \"public\",\n        \"official\": true,\n        \"mine\": false\n      }\n    }\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/libraries/internetbutton\\versions \\",
        "content": "$ curl https://api.particle.io/v1/libraries/internetbutton\\versions \\\n       -H \"Authorization: Bearer :access_token\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "src/LibrariesController.js",
    "groupTitle": "Libraries.3"
  },
  {
    "type": "post",
    "url": "/v1/libraries/:libraryName",
    "title": "Upload library version",
    "name": "uploadLibrary",
    "description": "<p>Upload a private version of a firmware library. If the library doesn't exist it is created.</p> <p>The library will be validated and an error response returned if invalid.</p>",
    "group": "Libraries.4",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "libraryName",
            "isArray": false,
            "description": "<p>Name of library to retrieve (case insensitive)</p>"
          }
        ]
      }
    },
    "body": [
      {
        "group": "Body",
        "type": "File",
        "optional": false,
        "field": "archive",
        "isArray": false,
        "description": "<p>A tar-gzip archive of all the files for the library.</p> <p>The meta data like name and version is taken from <code>library.properties.</code> See <a href=\"https://github.com/spark/uber-library-example\">the example library</a> for other files to include.</p>"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "data",
            "isArray": false,
            "description": "<p>The library version created. Described in <a href=\"#get-library-details\">Get library details</a></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/libraries",
          "content": "POST /v1/libraries\nHTTP/1.1 201 Created\n{\n  \"data\": {\n    \"type\": \"libraries\",\n    \"id\": \"testlib43\",\n    \"links\": {\n      \"download\": \"https://library-archives.particle.io/libraries/testlib43/testlib43-1.0.2.tar.gz\"\n    },\n    \"attributes\": {\n      \"name\": \"testlib43\",\n      \"version\": \"1.0.2\",\n      \"license\": \"MIT\",\n      \"author\": \"JV\",\n      \"sentence\": \"one sentence description of this library\",\n      \"url\": \"the URL of the project, like https://github.com/mygithub_user/my_repo\",\n      \"repository\": \"mygithub_user/my_repo\",\n      \"architectures\": [],\n      \"visibility\": \"private\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/libraries \\",
        "content": "$ curl https://api.particle.io/v1/libraries \\\n       -F \"archive=@library.tar.gz\" \\\n       -H \"Authorization: Bearer :access_token\"",
        "type": "bash"
      }
    ],
    "error": {
      "examples": [
        {
          "title": "POST /v1/libraries",
          "content": "POST /v1/libraries\nHTTP/1.1 400 Bad Request\n{\n  \"errors\": [\n    {\n      \"message\": \"This version is not valid. Version must be greater than or equal to 1.0.2\"\n    }\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "src/LibrariesController.js",
    "groupTitle": "Libraries.4"
  },
  {
    "type": "patch",
    "url": "/v1/libraries/:libraryName",
    "title": "Make a library version public",
    "name": "publishLibrary",
    "description": "<p>Make the latest private version of a firmware library public. You must do this before others can access your uploaded library.</p>",
    "group": "Libraries.5",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "libraryName",
            "isArray": false,
            "description": "<p>Name of library to retrieve (case insensitive)</p>"
          }
        ]
      }
    },
    "body": [
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "field": "visibility",
        "isArray": false,
        "description": "<p>Must be set to <code>public</code> to publish a library.</p>"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "data",
            "isArray": false,
            "description": "<p>The library version published. Described in <a href=\"#get-library-details\">Get library details</a></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PATCH /v1/libraries/testlib43",
          "content": "PATCH /v1/libraries/testlib43\nHTTP/1.1 200 OK\n{\n  \"data\": {\n    \"type\": \"libraries\",\n    \"id\": \"testlib43\",\n    \"links\": {\n      \"download\": \"https://library-archives.particle.io/libraries/testlib43/testlib43-1.0.2.tar.gz\"\n    },\n    \"attributes\": {\n      \"name\": \"testlib43\",\n      \"version\": \"1.0.2\",\n      \"license\": \"MIT\",\n      \"author\": \"JV\",\n      \"sentence\": \"one sentence description of this library\",\n      \"url\": \"the URL of the project, like https://github.com/mygithub_user/my_repo\",\n      \"repository\": \"mygithub_user/my_repo\",\n      \"architectures\": [],\n      \"visibility\": \"public\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl -X PATCH https://api.particle.io/v1/libraries/testlib43 \\",
        "content": "$ curl -X PATCH https://api.particle.io/v1/libraries/testlib43 \\\n       -d \"visibility=public\" \\\n       -H \"Authorization: Bearer :access_token\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "src/LibrariesController.js",
    "groupTitle": "Libraries.5"
  }
]